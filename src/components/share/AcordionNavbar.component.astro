---
interface Props {
    title: string;
    url: string;
    subMenu: Array<{ name: string; url: string }> | undefined;
}

const { title, url, subMenu } = Astro.props as Props;
---

{
    subMenu && subMenu.length > 0 && (
        <details class="w-full sm:w-96 bg-white p-4 rounded-xl shadow-md group mx-auto overflow-hidden max-h-[56px] open:!max-h-[400px] transition-[max-height] duration-500">
            <summary class="outline-none cursor-pointer focus:underline focus:text-indigo-600 font-semibold marker:text-transparent group-open:before:rotate-90 before:origin-center relative before:w-[18px] before:h-[18px] before:transition-transform before:duration-200 before:-left-1 before:top-2/4 before:-translate-y-2/4 before:absolute before:bg-no-repeat before:bg-[length:18px_18px] before:bg-center before:bg-[url('data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20class%3D%22h-6%20w-6%22%20fill%3D%22none%22%20viewBox%3D%220%200%2024%2024%22%20stroke%3D%22currentColor%22%20stroke-width%3D%222%22%3E%0A%20%20%3Cpath%20stroke-linecap%3D%22round%22%20stroke-linejoin%3D%22round%22%20d%3D%22M9%205l7%207-7%207%22%20%2F%3E%0A%3C%2Fsvg%3E')]">
                {title}
            </summary>

            <hr class="my-2 scale-x-150" />

            <div class="text-sm -m-4 -mt-2 p-4 bg-gray-50">
                {subMenu.map((item) => (
                    <a
                        href={item.url}
                        class="block px-4 py-2 text-gray-800 hover:bg-gray-200"
                    >
                        {item.name}
                    </a>
                ))}
            </div>
        </details>
    )
}

{
    !subMenu && (
        <a
            href={url}
            class="w-full sm:w-96 bg-white p-4 rounded-xl shadow-md group mx-auto overflow-hidden max-h-[56px] open:!max-h-[400px] transition-[max-height] duration-500"
        >
            {title}
        </a>
    )
}
